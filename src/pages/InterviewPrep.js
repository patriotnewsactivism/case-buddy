import React, { useState } from 'react';

const InterviewPrep = () => {
  const [currentQuestion, setCurrentQuestion] = useState(0);
  const [userResponse, setUserResponse] = useState('');
  const [feedback, setFeedback] = useState('');
  const [isRecording, setIsRecording] = useState(false);
  
  // Sample interview questions - in a real app this would be generated by AI
  const questions = [
    {
      id: 1,
      type: "Market Sizing",
      question: "How would you estimate the market size for electric bicycles in the United States?",
      tips: "Structure your approach clearly. Consider different user segments and use reasonable assumptions."
    },
    {
      id: 2,
      type: "Profitability",
      question: "A client's profits have decreased by 20% over the past year. How would you investigate the cause?",
      tips: "Examine both revenue and cost sides. Consider market factors, competition, and internal operations."
    },
    {
      id: 3,
      type: "Market Entry",
      question: "Your client wants to enter the Southeast Asian market. What factors would you consider?",
      tips: "Analyze market attractiveness, entry barriers, competition, and regulatory environment."
    }
  ];
  
  const startRecording = () => {
    setIsRecording(true);
    // In a real app, this would connect to the browser's speech recognition API
    setFeedback('Recording started. Please verbalize your response...');
  };
  
  const stopRecording = () => {
    setIsRecording(false);
    // In a real app, this would stop the speech recognition and send the response to AI for analysis
    setFeedback('Analyzing your response with AI...');
    setTimeout(() => {
      setFeedback('Great structure! Consider adding more specific market data for Southeast Asia in your analysis.');
    }, 2000);
  };
  
  const nextQuestion = () => {
    setCurrentQuestion((prev) => (prev + 1) % questions.length);
    setUserResponse('');
    setFeedback('');
  };
  
  return (
    <div className="p-6 max-w-4xl mx-auto">
      <h2 className="text-2xl font-bold text-gray-800 mb-2">Case Interview Preparation</h2>
      <p className="text-gray-600 mb-6">Practice with AI-powered feedback and analysis</p>
      
      <div className="bg-white border border-gray-200 rounded-lg p-6 mb-6">
        <div className="flex justify-between items-center mb-4">
          <span className="bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm">
            {questions[currentQuestion].type}
          </span>
          <span className="text-gray-500 text-sm">
            Question {currentQuestion + 1} of {questions.length}
          </span>
        </div>
        
        <h3 className="text-xl font-semibold mb-4">
          {questions[currentQuestion].question}
        </h3>
        
        <div className="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6">
          <p className="text-blue-800">
            <span className="font-semibold">Tip:</span> {questions[currentQuestion].tips}
          </p>
        </div>
        
        <div className="mb-6">
          <label className="block text-gray-700 mb-2">Your Response</label>
          <textarea
            value={userResponse}
            onChange={(e) => setUserResponse(e.target.value)}
            className="w-full h-32 p-3 border border-gray-300 rounded-md"
            placeholder="Type your response here or use voice recording..."
          />
        </div>
        
        <div className="flex space-x-4">
          {!isRecording ? (
            <button 
              onClick={startRecording}
              className="bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-md transition-colors"
            >
              Start Recording
            </button>
          ) : (
            <button 
              onClick={stopRecording}
              className="bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-md transition-colors"
            >
              Stop Recording
            </button>
          )}
          
          <button 
            onClick={nextQuestion}
            className="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md transition-colors"
          >
            Next Question
          </button>
        </div>
      </div>
      
      {feedback && (
        <div className="bg-green-50 border border-green-200 rounded-lg p-4">
          <p className="text-green-800">
            <span className="font-semibold">AI Feedback:</span> {feedback}
          </p>
        </div>
      )}
      
      <div className="mt-8">
        <h3 className="text-xl font-semibold mb-4">Practice History</h3>
        <div className="bg-white border border-gray-200 rounded-lg p-4">
          <ul className="space-y-2">
            <li className="flex justify-between p-2 hover:bg-gray-50 rounded-md">
              <span>Market Sizing Framework</span>
              <span className="text-green-600">Completed</span>
            </li>
            <li className="flex justify-between p-2 hover:bg-gray-50 rounded-md">
              <span>Profitability Analysis</span>
              <span className="text-yellow-600">In Progress</span>
            </li>
            <li className="flex justify-between p-2 hover:bg-gray-50 rounded-md">
              <span>Market Entry Strategy</span>
              <span className="text-gray-500">Not Started</span>
            </li>
          </ul>
        </div>
      </div>
    </div>
  );
};

export default InterviewPrep;